// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: mls_client.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// rpc GenerateTestVector
type TestVectorType int32

const (
	TestVectorType_TREE_MATH    TestVectorType = 0
	TestVectorType_ENCRYPTION   TestVectorType = 1
	TestVectorType_KEY_SCHEDULE TestVectorType = 2
	TestVectorType_TRANSCRIPT   TestVectorType = 3
	TestVectorType_TREEKEM      TestVectorType = 4
	TestVectorType_MESSAGES     TestVectorType = 5
)

// Enum value maps for TestVectorType.
var (
	TestVectorType_name = map[int32]string{
		0: "TREE_MATH",
		1: "ENCRYPTION",
		2: "KEY_SCHEDULE",
		3: "TRANSCRIPT",
		4: "TREEKEM",
		5: "MESSAGES",
	}
	TestVectorType_value = map[string]int32{
		"TREE_MATH":    0,
		"ENCRYPTION":   1,
		"KEY_SCHEDULE": 2,
		"TRANSCRIPT":   3,
		"TREEKEM":      4,
		"MESSAGES":     5,
	}
)

func (x TestVectorType) Enum() *TestVectorType {
	p := new(TestVectorType)
	*p = x
	return p
}

func (x TestVectorType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TestVectorType) Descriptor() protoreflect.EnumDescriptor {
	return file_mls_client_proto_enumTypes[0].Descriptor()
}

func (TestVectorType) Type() protoreflect.EnumType {
	return &file_mls_client_proto_enumTypes[0]
}

func (x TestVectorType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TestVectorType.Descriptor instead.
func (TestVectorType) EnumDescriptor() ([]byte, []int) {
	return file_mls_client_proto_rawDescGZIP(), []int{0}
}

// rpc Name
type NameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *NameRequest) Reset() {
	*x = NameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mls_client_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NameRequest) ProtoMessage() {}

func (x *NameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mls_client_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NameRequest.ProtoReflect.Descriptor instead.
func (*NameRequest) Descriptor() ([]byte, []int) {
	return file_mls_client_proto_rawDescGZIP(), []int{0}
}

type NameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *NameResponse) Reset() {
	*x = NameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mls_client_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NameResponse) ProtoMessage() {}

func (x *NameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mls_client_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NameResponse.ProtoReflect.Descriptor instead.
func (*NameResponse) Descriptor() ([]byte, []int) {
	return file_mls_client_proto_rawDescGZIP(), []int{1}
}

func (x *NameResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// rpc SupportedCiphersuites
type SupportedCiphersuitesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SupportedCiphersuitesRequest) Reset() {
	*x = SupportedCiphersuitesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mls_client_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SupportedCiphersuitesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SupportedCiphersuitesRequest) ProtoMessage() {}

func (x *SupportedCiphersuitesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mls_client_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SupportedCiphersuitesRequest.ProtoReflect.Descriptor instead.
func (*SupportedCiphersuitesRequest) Descriptor() ([]byte, []int) {
	return file_mls_client_proto_rawDescGZIP(), []int{2}
}

type SupportedCiphersuitesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ciphersuites []uint32 `protobuf:"varint,1,rep,packed,name=ciphersuites,proto3" json:"ciphersuites,omitempty"` // Actually uint16 ciphersuite values
}

func (x *SupportedCiphersuitesResponse) Reset() {
	*x = SupportedCiphersuitesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mls_client_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SupportedCiphersuitesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SupportedCiphersuitesResponse) ProtoMessage() {}

func (x *SupportedCiphersuitesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mls_client_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SupportedCiphersuitesResponse.ProtoReflect.Descriptor instead.
func (*SupportedCiphersuitesResponse) Descriptor() ([]byte, []int) {
	return file_mls_client_proto_rawDescGZIP(), []int{3}
}

func (x *SupportedCiphersuitesResponse) GetCiphersuites() []uint32 {
	if x != nil {
		return x.Ciphersuites
	}
	return nil
}

// Generation parameters that are not needed for a given test type are ignored
type GenerateTestVectorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TestVectorType TestVectorType `protobuf:"varint,1,opt,name=test_vector_type,json=testVectorType,proto3,enum=mls_client.TestVectorType" json:"test_vector_type,omitempty"`
	CipherSuite    uint32         `protobuf:"varint,2,opt,name=cipher_suite,json=cipherSuite,proto3" json:"cipher_suite,omitempty"` // Actually uint16
	NLeaves        uint32         `protobuf:"varint,3,opt,name=n_leaves,json=nLeaves,proto3" json:"n_leaves,omitempty"`
	NGenerations   uint32         `protobuf:"varint,4,opt,name=n_generations,json=nGenerations,proto3" json:"n_generations,omitempty"`
	NEpochs        uint32         `protobuf:"varint,5,opt,name=n_epochs,json=nEpochs,proto3" json:"n_epochs,omitempty"`
}

func (x *GenerateTestVectorRequest) Reset() {
	*x = GenerateTestVectorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mls_client_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateTestVectorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateTestVectorRequest) ProtoMessage() {}

func (x *GenerateTestVectorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mls_client_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateTestVectorRequest.ProtoReflect.Descriptor instead.
func (*GenerateTestVectorRequest) Descriptor() ([]byte, []int) {
	return file_mls_client_proto_rawDescGZIP(), []int{4}
}

func (x *GenerateTestVectorRequest) GetTestVectorType() TestVectorType {
	if x != nil {
		return x.TestVectorType
	}
	return TestVectorType_TREE_MATH
}

func (x *GenerateTestVectorRequest) GetCipherSuite() uint32 {
	if x != nil {
		return x.CipherSuite
	}
	return 0
}

func (x *GenerateTestVectorRequest) GetNLeaves() uint32 {
	if x != nil {
		return x.NLeaves
	}
	return 0
}

func (x *GenerateTestVectorRequest) GetNGenerations() uint32 {
	if x != nil {
		return x.NGenerations
	}
	return 0
}

func (x *GenerateTestVectorRequest) GetNEpochs() uint32 {
	if x != nil {
		return x.NEpochs
	}
	return 0
}

type GenerateTestVectorResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TestVector []byte `protobuf:"bytes,1,opt,name=test_vector,json=testVector,proto3" json:"test_vector,omitempty"`
}

func (x *GenerateTestVectorResponse) Reset() {
	*x = GenerateTestVectorResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mls_client_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateTestVectorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateTestVectorResponse) ProtoMessage() {}

func (x *GenerateTestVectorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mls_client_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateTestVectorResponse.ProtoReflect.Descriptor instead.
func (*GenerateTestVectorResponse) Descriptor() ([]byte, []int) {
	return file_mls_client_proto_rawDescGZIP(), []int{5}
}

func (x *GenerateTestVectorResponse) GetTestVector() []byte {
	if x != nil {
		return x.TestVector
	}
	return nil
}

// rpc VerifyTestVector
type VerifyTestVectorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TestVectorType TestVectorType `protobuf:"varint,1,opt,name=test_vector_type,json=testVectorType,proto3,enum=mls_client.TestVectorType" json:"test_vector_type,omitempty"`
	TestVector     []byte         `protobuf:"bytes,2,opt,name=test_vector,json=testVector,proto3" json:"test_vector,omitempty"`
}

func (x *VerifyTestVectorRequest) Reset() {
	*x = VerifyTestVectorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mls_client_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyTestVectorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyTestVectorRequest) ProtoMessage() {}

func (x *VerifyTestVectorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mls_client_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyTestVectorRequest.ProtoReflect.Descriptor instead.
func (*VerifyTestVectorRequest) Descriptor() ([]byte, []int) {
	return file_mls_client_proto_rawDescGZIP(), []int{6}
}

func (x *VerifyTestVectorRequest) GetTestVectorType() TestVectorType {
	if x != nil {
		return x.TestVectorType
	}
	return TestVectorType_TREE_MATH
}

func (x *VerifyTestVectorRequest) GetTestVector() []byte {
	if x != nil {
		return x.TestVector
	}
	return nil
}

type VerifyTestVectorResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *VerifyTestVectorResponse) Reset() {
	*x = VerifyTestVectorResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mls_client_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyTestVectorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyTestVectorResponse) ProtoMessage() {}

func (x *VerifyTestVectorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mls_client_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyTestVectorResponse.ProtoReflect.Descriptor instead.
func (*VerifyTestVectorResponse) Descriptor() ([]byte, []int) {
	return file_mls_client_proto_rawDescGZIP(), []int{7}
}

// rpc CreateGroup
// XXX(RLB): Credential type is omitted; let's just use Basic for these tests
type CreateGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId          []byte `protobuf:"bytes,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	CipherSuite      uint32 `protobuf:"varint,2,opt,name=cipher_suite,json=cipherSuite,proto3" json:"cipher_suite,omitempty"` // Actually uint16
	EncryptHandshake bool   `protobuf:"varint,3,opt,name=encrypt_handshake,json=encryptHandshake,proto3" json:"encrypt_handshake,omitempty"`
}

func (x *CreateGroupRequest) Reset() {
	*x = CreateGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mls_client_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGroupRequest) ProtoMessage() {}

func (x *CreateGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mls_client_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGroupRequest.ProtoReflect.Descriptor instead.
func (*CreateGroupRequest) Descriptor() ([]byte, []int) {
	return file_mls_client_proto_rawDescGZIP(), []int{8}
}

func (x *CreateGroupRequest) GetGroupId() []byte {
	if x != nil {
		return x.GroupId
	}
	return nil
}

func (x *CreateGroupRequest) GetCipherSuite() uint32 {
	if x != nil {
		return x.CipherSuite
	}
	return 0
}

func (x *CreateGroupRequest) GetEncryptHandshake() bool {
	if x != nil {
		return x.EncryptHandshake
	}
	return false
}

type CreateGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StateId uint32 `protobuf:"varint,1,opt,name=state_id,json=stateId,proto3" json:"state_id,omitempty"`
}

func (x *CreateGroupResponse) Reset() {
	*x = CreateGroupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mls_client_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGroupResponse) ProtoMessage() {}

func (x *CreateGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mls_client_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGroupResponse.ProtoReflect.Descriptor instead.
func (*CreateGroupResponse) Descriptor() ([]byte, []int) {
	return file_mls_client_proto_rawDescGZIP(), []int{9}
}

func (x *CreateGroupResponse) GetStateId() uint32 {
	if x != nil {
		return x.StateId
	}
	return 0
}

// rpc CreateKeyPackage
type CreateKeyPackageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CipherSuite uint32 `protobuf:"varint,1,opt,name=cipher_suite,json=cipherSuite,proto3" json:"cipher_suite,omitempty"`
}

func (x *CreateKeyPackageRequest) Reset() {
	*x = CreateKeyPackageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mls_client_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateKeyPackageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateKeyPackageRequest) ProtoMessage() {}

func (x *CreateKeyPackageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mls_client_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateKeyPackageRequest.ProtoReflect.Descriptor instead.
func (*CreateKeyPackageRequest) Descriptor() ([]byte, []int) {
	return file_mls_client_proto_rawDescGZIP(), []int{10}
}

func (x *CreateKeyPackageRequest) GetCipherSuite() uint32 {
	if x != nil {
		return x.CipherSuite
	}
	return 0
}

type CreateKeyPackageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionId uint32 `protobuf:"varint,1,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	KeyPackage    []byte `protobuf:"bytes,2,opt,name=key_package,json=keyPackage,proto3" json:"key_package,omitempty"`
}

func (x *CreateKeyPackageResponse) Reset() {
	*x = CreateKeyPackageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mls_client_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateKeyPackageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateKeyPackageResponse) ProtoMessage() {}

func (x *CreateKeyPackageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mls_client_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateKeyPackageResponse.ProtoReflect.Descriptor instead.
func (*CreateKeyPackageResponse) Descriptor() ([]byte, []int) {
	return file_mls_client_proto_rawDescGZIP(), []int{11}
}

func (x *CreateKeyPackageResponse) GetTransactionId() uint32 {
	if x != nil {
		return x.TransactionId
	}
	return 0
}

func (x *CreateKeyPackageResponse) GetKeyPackage() []byte {
	if x != nil {
		return x.KeyPackage
	}
	return nil
}

// rpc JoinGroup
type JoinGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionId    uint32 `protobuf:"varint,1,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	Welcome          []byte `protobuf:"bytes,2,opt,name=welcome,proto3" json:"welcome,omitempty"`
	EncryptHandshake bool   `protobuf:"varint,3,opt,name=encrypt_handshake,json=encryptHandshake,proto3" json:"encrypt_handshake,omitempty"`
}

func (x *JoinGroupRequest) Reset() {
	*x = JoinGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mls_client_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinGroupRequest) ProtoMessage() {}

func (x *JoinGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mls_client_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinGroupRequest.ProtoReflect.Descriptor instead.
func (*JoinGroupRequest) Descriptor() ([]byte, []int) {
	return file_mls_client_proto_rawDescGZIP(), []int{12}
}

func (x *JoinGroupRequest) GetTransactionId() uint32 {
	if x != nil {
		return x.TransactionId
	}
	return 0
}

func (x *JoinGroupRequest) GetWelcome() []byte {
	if x != nil {
		return x.Welcome
	}
	return nil
}

func (x *JoinGroupRequest) GetEncryptHandshake() bool {
	if x != nil {
		return x.EncryptHandshake
	}
	return false
}

type JoinGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StateId uint32 `protobuf:"varint,1,opt,name=state_id,json=stateId,proto3" json:"state_id,omitempty"`
}

func (x *JoinGroupResponse) Reset() {
	*x = JoinGroupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mls_client_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinGroupResponse) ProtoMessage() {}

func (x *JoinGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mls_client_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinGroupResponse.ProtoReflect.Descriptor instead.
func (*JoinGroupResponse) Descriptor() ([]byte, []int) {
	return file_mls_client_proto_rawDescGZIP(), []int{13}
}

func (x *JoinGroupResponse) GetStateId() uint32 {
	if x != nil {
		return x.StateId
	}
	return 0
}

// rpc ExternalJoin
type ExternalJoinRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublicGroupState []byte `protobuf:"bytes,1,opt,name=public_group_state,json=publicGroupState,proto3" json:"public_group_state,omitempty"`
	EncryptHandshake bool   `protobuf:"varint,2,opt,name=encrypt_handshake,json=encryptHandshake,proto3" json:"encrypt_handshake,omitempty"`
}

func (x *ExternalJoinRequest) Reset() {
	*x = ExternalJoinRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mls_client_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExternalJoinRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExternalJoinRequest) ProtoMessage() {}

func (x *ExternalJoinRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mls_client_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExternalJoinRequest.ProtoReflect.Descriptor instead.
func (*ExternalJoinRequest) Descriptor() ([]byte, []int) {
	return file_mls_client_proto_rawDescGZIP(), []int{14}
}

func (x *ExternalJoinRequest) GetPublicGroupState() []byte {
	if x != nil {
		return x.PublicGroupState
	}
	return nil
}

func (x *ExternalJoinRequest) GetEncryptHandshake() bool {
	if x != nil {
		return x.EncryptHandshake
	}
	return false
}

type ExternalJoinResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StateId uint32 `protobuf:"varint,1,opt,name=state_id,json=stateId,proto3" json:"state_id,omitempty"`
	Commit  []byte `protobuf:"bytes,2,opt,name=commit,proto3" json:"commit,omitempty"`
}

func (x *ExternalJoinResponse) Reset() {
	*x = ExternalJoinResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mls_client_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExternalJoinResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExternalJoinResponse) ProtoMessage() {}

func (x *ExternalJoinResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mls_client_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExternalJoinResponse.ProtoReflect.Descriptor instead.
func (*ExternalJoinResponse) Descriptor() ([]byte, []int) {
	return file_mls_client_proto_rawDescGZIP(), []int{15}
}

func (x *ExternalJoinResponse) GetStateId() uint32 {
	if x != nil {
		return x.StateId
	}
	return 0
}

func (x *ExternalJoinResponse) GetCommit() []byte {
	if x != nil {
		return x.Commit
	}
	return nil
}

// rpc PublicGroupState
type PublicGroupStateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StateId uint32 `protobuf:"varint,1,opt,name=state_id,json=stateId,proto3" json:"state_id,omitempty"`
}

func (x *PublicGroupStateRequest) Reset() {
	*x = PublicGroupStateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mls_client_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublicGroupStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublicGroupStateRequest) ProtoMessage() {}

func (x *PublicGroupStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mls_client_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublicGroupStateRequest.ProtoReflect.Descriptor instead.
func (*PublicGroupStateRequest) Descriptor() ([]byte, []int) {
	return file_mls_client_proto_rawDescGZIP(), []int{16}
}

func (x *PublicGroupStateRequest) GetStateId() uint32 {
	if x != nil {
		return x.StateId
	}
	return 0
}

type PublicGroupStateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublicGroupState []byte `protobuf:"bytes,1,opt,name=public_group_state,json=publicGroupState,proto3" json:"public_group_state,omitempty"`
}

func (x *PublicGroupStateResponse) Reset() {
	*x = PublicGroupStateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mls_client_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublicGroupStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublicGroupStateResponse) ProtoMessage() {}

func (x *PublicGroupStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mls_client_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublicGroupStateResponse.ProtoReflect.Descriptor instead.
func (*PublicGroupStateResponse) Descriptor() ([]byte, []int) {
	return file_mls_client_proto_rawDescGZIP(), []int{17}
}

func (x *PublicGroupStateResponse) GetPublicGroupState() []byte {
	if x != nil {
		return x.PublicGroupState
	}
	return nil
}

// rpc StateAuth
type StateAuthRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StateId uint32 `protobuf:"varint,1,opt,name=state_id,json=stateId,proto3" json:"state_id,omitempty"`
}

func (x *StateAuthRequest) Reset() {
	*x = StateAuthRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mls_client_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateAuthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateAuthRequest) ProtoMessage() {}

func (x *StateAuthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mls_client_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateAuthRequest.ProtoReflect.Descriptor instead.
func (*StateAuthRequest) Descriptor() ([]byte, []int) {
	return file_mls_client_proto_rawDescGZIP(), []int{18}
}

func (x *StateAuthRequest) GetStateId() uint32 {
	if x != nil {
		return x.StateId
	}
	return 0
}

type StateAuthResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StateAuthSecret []byte `protobuf:"bytes,1,opt,name=state_auth_secret,json=stateAuthSecret,proto3" json:"state_auth_secret,omitempty"`
}

func (x *StateAuthResponse) Reset() {
	*x = StateAuthResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mls_client_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateAuthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateAuthResponse) ProtoMessage() {}

func (x *StateAuthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mls_client_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateAuthResponse.ProtoReflect.Descriptor instead.
func (*StateAuthResponse) Descriptor() ([]byte, []int) {
	return file_mls_client_proto_rawDescGZIP(), []int{19}
}

func (x *StateAuthResponse) GetStateAuthSecret() []byte {
	if x != nil {
		return x.StateAuthSecret
	}
	return nil
}

// rpc Export
type ExportRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StateId   uint32 `protobuf:"varint,1,opt,name=state_id,json=stateId,proto3" json:"state_id,omitempty"`
	Label     string `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`
	Context   []byte `protobuf:"bytes,3,opt,name=context,proto3" json:"context,omitempty"`
	KeyLength uint32 `protobuf:"varint,4,opt,name=key_length,json=keyLength,proto3" json:"key_length,omitempty"`
}

func (x *ExportRequest) Reset() {
	*x = ExportRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mls_client_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportRequest) ProtoMessage() {}

func (x *ExportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mls_client_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportRequest.ProtoReflect.Descriptor instead.
func (*ExportRequest) Descriptor() ([]byte, []int) {
	return file_mls_client_proto_rawDescGZIP(), []int{20}
}

func (x *ExportRequest) GetStateId() uint32 {
	if x != nil {
		return x.StateId
	}
	return 0
}

func (x *ExportRequest) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *ExportRequest) GetContext() []byte {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *ExportRequest) GetKeyLength() uint32 {
	if x != nil {
		return x.KeyLength
	}
	return 0
}

type ExportResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExportedSecret []byte `protobuf:"bytes,1,opt,name=exported_secret,json=exportedSecret,proto3" json:"exported_secret,omitempty"`
}

func (x *ExportResponse) Reset() {
	*x = ExportResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mls_client_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExportResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportResponse) ProtoMessage() {}

func (x *ExportResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mls_client_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportResponse.ProtoReflect.Descriptor instead.
func (*ExportResponse) Descriptor() ([]byte, []int) {
	return file_mls_client_proto_rawDescGZIP(), []int{21}
}

func (x *ExportResponse) GetExportedSecret() []byte {
	if x != nil {
		return x.ExportedSecret
	}
	return nil
}

// rpc Protect
type ProtectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StateId         uint32 `protobuf:"varint,1,opt,name=state_id,json=stateId,proto3" json:"state_id,omitempty"`
	ApplicationData []byte `protobuf:"bytes,2,opt,name=application_data,json=applicationData,proto3" json:"application_data,omitempty"`
}

func (x *ProtectRequest) Reset() {
	*x = ProtectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mls_client_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtectRequest) ProtoMessage() {}

func (x *ProtectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mls_client_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtectRequest.ProtoReflect.Descriptor instead.
func (*ProtectRequest) Descriptor() ([]byte, []int) {
	return file_mls_client_proto_rawDescGZIP(), []int{22}
}

func (x *ProtectRequest) GetStateId() uint32 {
	if x != nil {
		return x.StateId
	}
	return 0
}

func (x *ProtectRequest) GetApplicationData() []byte {
	if x != nil {
		return x.ApplicationData
	}
	return nil
}

type ProtectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ciphertext []byte `protobuf:"bytes,1,opt,name=ciphertext,proto3" json:"ciphertext,omitempty"`
}

func (x *ProtectResponse) Reset() {
	*x = ProtectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mls_client_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtectResponse) ProtoMessage() {}

func (x *ProtectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mls_client_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtectResponse.ProtoReflect.Descriptor instead.
func (*ProtectResponse) Descriptor() ([]byte, []int) {
	return file_mls_client_proto_rawDescGZIP(), []int{23}
}

func (x *ProtectResponse) GetCiphertext() []byte {
	if x != nil {
		return x.Ciphertext
	}
	return nil
}

// rpc Unprotect
type UnprotectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StateId    uint32 `protobuf:"varint,1,opt,name=state_id,json=stateId,proto3" json:"state_id,omitempty"`
	Ciphertext []byte `protobuf:"bytes,2,opt,name=ciphertext,proto3" json:"ciphertext,omitempty"`
}

func (x *UnprotectRequest) Reset() {
	*x = UnprotectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mls_client_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnprotectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnprotectRequest) ProtoMessage() {}

func (x *UnprotectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mls_client_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnprotectRequest.ProtoReflect.Descriptor instead.
func (*UnprotectRequest) Descriptor() ([]byte, []int) {
	return file_mls_client_proto_rawDescGZIP(), []int{24}
}

func (x *UnprotectRequest) GetStateId() uint32 {
	if x != nil {
		return x.StateId
	}
	return 0
}

func (x *UnprotectRequest) GetCiphertext() []byte {
	if x != nil {
		return x.Ciphertext
	}
	return nil
}

type UnprotectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApplicationData []byte `protobuf:"bytes,1,opt,name=application_data,json=applicationData,proto3" json:"application_data,omitempty"`
}

func (x *UnprotectResponse) Reset() {
	*x = UnprotectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mls_client_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnprotectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnprotectResponse) ProtoMessage() {}

func (x *UnprotectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mls_client_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnprotectResponse.ProtoReflect.Descriptor instead.
func (*UnprotectResponse) Descriptor() ([]byte, []int) {
	return file_mls_client_proto_rawDescGZIP(), []int{25}
}

func (x *UnprotectResponse) GetApplicationData() []byte {
	if x != nil {
		return x.ApplicationData
	}
	return nil
}

// rpc StorePSK
type StorePSKRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StateId uint32 `protobuf:"varint,1,opt,name=state_id,json=stateId,proto3" json:"state_id,omitempty"`
	PskId   []byte `protobuf:"bytes,2,opt,name=psk_id,json=pskId,proto3" json:"psk_id,omitempty"`
	Psk     []byte `protobuf:"bytes,3,opt,name=psk,proto3" json:"psk,omitempty"`
}

func (x *StorePSKRequest) Reset() {
	*x = StorePSKRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mls_client_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StorePSKRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorePSKRequest) ProtoMessage() {}

func (x *StorePSKRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mls_client_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorePSKRequest.ProtoReflect.Descriptor instead.
func (*StorePSKRequest) Descriptor() ([]byte, []int) {
	return file_mls_client_proto_rawDescGZIP(), []int{26}
}

func (x *StorePSKRequest) GetStateId() uint32 {
	if x != nil {
		return x.StateId
	}
	return 0
}

func (x *StorePSKRequest) GetPskId() []byte {
	if x != nil {
		return x.PskId
	}
	return nil
}

func (x *StorePSKRequest) GetPsk() []byte {
	if x != nil {
		return x.Psk
	}
	return nil
}

type StorePSKResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StorePSKResponse) Reset() {
	*x = StorePSKResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mls_client_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StorePSKResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorePSKResponse) ProtoMessage() {}

func (x *StorePSKResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mls_client_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorePSKResponse.ProtoReflect.Descriptor instead.
func (*StorePSKResponse) Descriptor() ([]byte, []int) {
	return file_mls_client_proto_rawDescGZIP(), []int{27}
}

// rpc AddProposal
type AddProposalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StateId    uint32 `protobuf:"varint,1,opt,name=state_id,json=stateId,proto3" json:"state_id,omitempty"`
	KeyPackage []byte `protobuf:"bytes,2,opt,name=key_package,json=keyPackage,proto3" json:"key_package,omitempty"`
}

func (x *AddProposalRequest) Reset() {
	*x = AddProposalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mls_client_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddProposalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddProposalRequest) ProtoMessage() {}

func (x *AddProposalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mls_client_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddProposalRequest.ProtoReflect.Descriptor instead.
func (*AddProposalRequest) Descriptor() ([]byte, []int) {
	return file_mls_client_proto_rawDescGZIP(), []int{28}
}

func (x *AddProposalRequest) GetStateId() uint32 {
	if x != nil {
		return x.StateId
	}
	return 0
}

func (x *AddProposalRequest) GetKeyPackage() []byte {
	if x != nil {
		return x.KeyPackage
	}
	return nil
}

type ProposalResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Proposal []byte `protobuf:"bytes,1,opt,name=proposal,proto3" json:"proposal,omitempty"`
}

func (x *ProposalResponse) Reset() {
	*x = ProposalResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mls_client_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProposalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProposalResponse) ProtoMessage() {}

func (x *ProposalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mls_client_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProposalResponse.ProtoReflect.Descriptor instead.
func (*ProposalResponse) Descriptor() ([]byte, []int) {
	return file_mls_client_proto_rawDescGZIP(), []int{29}
}

func (x *ProposalResponse) GetProposal() []byte {
	if x != nil {
		return x.Proposal
	}
	return nil
}

// rpc UpdateProposal
type UpdateProposalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StateId uint32 `protobuf:"varint,1,opt,name=state_id,json=stateId,proto3" json:"state_id,omitempty"`
}

func (x *UpdateProposalRequest) Reset() {
	*x = UpdateProposalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mls_client_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateProposalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProposalRequest) ProtoMessage() {}

func (x *UpdateProposalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mls_client_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProposalRequest.ProtoReflect.Descriptor instead.
func (*UpdateProposalRequest) Descriptor() ([]byte, []int) {
	return file_mls_client_proto_rawDescGZIP(), []int{30}
}

func (x *UpdateProposalRequest) GetStateId() uint32 {
	if x != nil {
		return x.StateId
	}
	return 0
}

// rpc RemoveProposal
type RemoveProposalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StateId          uint32 `protobuf:"varint,1,opt,name=state_id,json=stateId,proto3" json:"state_id,omitempty"`
	RemovedLeafIndex uint32 `protobuf:"varint,2,opt,name=removed_leaf_index,json=removedLeafIndex,proto3" json:"removed_leaf_index,omitempty"`
}

func (x *RemoveProposalRequest) Reset() {
	*x = RemoveProposalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mls_client_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveProposalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveProposalRequest) ProtoMessage() {}

func (x *RemoveProposalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mls_client_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveProposalRequest.ProtoReflect.Descriptor instead.
func (*RemoveProposalRequest) Descriptor() ([]byte, []int) {
	return file_mls_client_proto_rawDescGZIP(), []int{31}
}

func (x *RemoveProposalRequest) GetStateId() uint32 {
	if x != nil {
		return x.StateId
	}
	return 0
}

func (x *RemoveProposalRequest) GetRemovedLeafIndex() uint32 {
	if x != nil {
		return x.RemovedLeafIndex
	}
	return 0
}

// rpc PSKProposal
type PSKProposalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StateId uint32 `protobuf:"varint,1,opt,name=state_id,json=stateId,proto3" json:"state_id,omitempty"`
	PskId   []byte `protobuf:"bytes,2,opt,name=psk_id,json=pskId,proto3" json:"psk_id,omitempty"`
}

func (x *PSKProposalRequest) Reset() {
	*x = PSKProposalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mls_client_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PSKProposalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PSKProposalRequest) ProtoMessage() {}

func (x *PSKProposalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mls_client_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PSKProposalRequest.ProtoReflect.Descriptor instead.
func (*PSKProposalRequest) Descriptor() ([]byte, []int) {
	return file_mls_client_proto_rawDescGZIP(), []int{32}
}

func (x *PSKProposalRequest) GetStateId() uint32 {
	if x != nil {
		return x.StateId
	}
	return 0
}

func (x *PSKProposalRequest) GetPskId() []byte {
	if x != nil {
		return x.PskId
	}
	return nil
}

// rpc ReInitProposal
type ReInitProposalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StateId     uint32 `protobuf:"varint,1,opt,name=state_id,json=stateId,proto3" json:"state_id,omitempty"`
	GroupId     []byte `protobuf:"bytes,2,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	CipherSuite uint32 `protobuf:"varint,3,opt,name=cipher_suite,json=cipherSuite,proto3" json:"cipher_suite,omitempty"` // actually uint16
}

func (x *ReInitProposalRequest) Reset() {
	*x = ReInitProposalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mls_client_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReInitProposalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReInitProposalRequest) ProtoMessage() {}

func (x *ReInitProposalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mls_client_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReInitProposalRequest.ProtoReflect.Descriptor instead.
func (*ReInitProposalRequest) Descriptor() ([]byte, []int) {
	return file_mls_client_proto_rawDescGZIP(), []int{33}
}

func (x *ReInitProposalRequest) GetStateId() uint32 {
	if x != nil {
		return x.StateId
	}
	return 0
}

func (x *ReInitProposalRequest) GetGroupId() []byte {
	if x != nil {
		return x.GroupId
	}
	return nil
}

func (x *ReInitProposalRequest) GetCipherSuite() uint32 {
	if x != nil {
		return x.CipherSuite
	}
	return 0
}

// rpc AppAckProposal
type AppAckProposalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StateId uint32 `protobuf:"varint,1,opt,name=state_id,json=stateId,proto3" json:"state_id,omitempty"`
}

func (x *AppAckProposalRequest) Reset() {
	*x = AppAckProposalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mls_client_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppAckProposalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppAckProposalRequest) ProtoMessage() {}

func (x *AppAckProposalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mls_client_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppAckProposalRequest.ProtoReflect.Descriptor instead.
func (*AppAckProposalRequest) Descriptor() ([]byte, []int) {
	return file_mls_client_proto_rawDescGZIP(), []int{34}
}

func (x *AppAckProposalRequest) GetStateId() uint32 {
	if x != nil {
		return x.StateId
	}
	return 0
}

// rpc Commit
type CommitRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StateId     uint32   `protobuf:"varint,1,opt,name=state_id,json=stateId,proto3" json:"state_id,omitempty"`
	ByReference [][]byte `protobuf:"bytes,2,rep,name=by_reference,json=byReference,proto3" json:"by_reference,omitempty"`
	ByValue     [][]byte `protobuf:"bytes,3,rep,name=by_value,json=byValue,proto3" json:"by_value,omitempty"`
}

func (x *CommitRequest) Reset() {
	*x = CommitRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mls_client_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitRequest) ProtoMessage() {}

func (x *CommitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mls_client_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitRequest.ProtoReflect.Descriptor instead.
func (*CommitRequest) Descriptor() ([]byte, []int) {
	return file_mls_client_proto_rawDescGZIP(), []int{35}
}

func (x *CommitRequest) GetStateId() uint32 {
	if x != nil {
		return x.StateId
	}
	return 0
}

func (x *CommitRequest) GetByReference() [][]byte {
	if x != nil {
		return x.ByReference
	}
	return nil
}

func (x *CommitRequest) GetByValue() [][]byte {
	if x != nil {
		return x.ByValue
	}
	return nil
}

type CommitResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Commit  []byte `protobuf:"bytes,1,opt,name=commit,proto3" json:"commit,omitempty"`
	Welcome []byte `protobuf:"bytes,2,opt,name=welcome,proto3" json:"welcome,omitempty"`
}

func (x *CommitResponse) Reset() {
	*x = CommitResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mls_client_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitResponse) ProtoMessage() {}

func (x *CommitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mls_client_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitResponse.ProtoReflect.Descriptor instead.
func (*CommitResponse) Descriptor() ([]byte, []int) {
	return file_mls_client_proto_rawDescGZIP(), []int{36}
}

func (x *CommitResponse) GetCommit() []byte {
	if x != nil {
		return x.Commit
	}
	return nil
}

func (x *CommitResponse) GetWelcome() []byte {
	if x != nil {
		return x.Welcome
	}
	return nil
}

// rpc HandleCommit
type HandleCommitRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StateId  uint32   `protobuf:"varint,1,opt,name=state_id,json=stateId,proto3" json:"state_id,omitempty"`
	Proposal [][]byte `protobuf:"bytes,2,rep,name=proposal,proto3" json:"proposal,omitempty"`
	Commit   []byte   `protobuf:"bytes,3,opt,name=commit,proto3" json:"commit,omitempty"`
}

func (x *HandleCommitRequest) Reset() {
	*x = HandleCommitRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mls_client_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HandleCommitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HandleCommitRequest) ProtoMessage() {}

func (x *HandleCommitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mls_client_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HandleCommitRequest.ProtoReflect.Descriptor instead.
func (*HandleCommitRequest) Descriptor() ([]byte, []int) {
	return file_mls_client_proto_rawDescGZIP(), []int{37}
}

func (x *HandleCommitRequest) GetStateId() uint32 {
	if x != nil {
		return x.StateId
	}
	return 0
}

func (x *HandleCommitRequest) GetProposal() [][]byte {
	if x != nil {
		return x.Proposal
	}
	return nil
}

func (x *HandleCommitRequest) GetCommit() []byte {
	if x != nil {
		return x.Commit
	}
	return nil
}

type HandleCommitResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StateId        uint32   `protobuf:"varint,1,opt,name=state_id,json=stateId,proto3" json:"state_id,omitempty"`
	Added          []uint32 `protobuf:"varint,2,rep,packed,name=added,proto3" json:"added,omitempty"`
	RemovedIndices []uint32 `protobuf:"varint,3,rep,packed,name=removed_indices,json=removedIndices,proto3" json:"removed_indices,omitempty"`
	RemovedLeaves  [][]byte `protobuf:"bytes,4,rep,name=removed_leaves,json=removedLeaves,proto3" json:"removed_leaves,omitempty"`
	Updated        []uint32 `protobuf:"varint,5,rep,packed,name=updated,proto3" json:"updated,omitempty"`
}

func (x *HandleCommitResponse) Reset() {
	*x = HandleCommitResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mls_client_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HandleCommitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HandleCommitResponse) ProtoMessage() {}

func (x *HandleCommitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mls_client_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HandleCommitResponse.ProtoReflect.Descriptor instead.
func (*HandleCommitResponse) Descriptor() ([]byte, []int) {
	return file_mls_client_proto_rawDescGZIP(), []int{38}
}

func (x *HandleCommitResponse) GetStateId() uint32 {
	if x != nil {
		return x.StateId
	}
	return 0
}

func (x *HandleCommitResponse) GetAdded() []uint32 {
	if x != nil {
		return x.Added
	}
	return nil
}

func (x *HandleCommitResponse) GetRemovedIndices() []uint32 {
	if x != nil {
		return x.RemovedIndices
	}
	return nil
}

func (x *HandleCommitResponse) GetRemovedLeaves() [][]byte {
	if x != nil {
		return x.RemovedLeaves
	}
	return nil
}

func (x *HandleCommitResponse) GetUpdated() []uint32 {
	if x != nil {
		return x.Updated
	}
	return nil
}

// rpc HandlePendingCommit
type HandlePendingCommitRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StateId uint32 `protobuf:"varint,1,opt,name=state_id,json=stateId,proto3" json:"state_id,omitempty"`
}

func (x *HandlePendingCommitRequest) Reset() {
	*x = HandlePendingCommitRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mls_client_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HandlePendingCommitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HandlePendingCommitRequest) ProtoMessage() {}

func (x *HandlePendingCommitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mls_client_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HandlePendingCommitRequest.ProtoReflect.Descriptor instead.
func (*HandlePendingCommitRequest) Descriptor() ([]byte, []int) {
	return file_mls_client_proto_rawDescGZIP(), []int{39}
}

func (x *HandlePendingCommitRequest) GetStateId() uint32 {
	if x != nil {
		return x.StateId
	}
	return 0
}

type HandlePendingCommitResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StateId        uint32   `protobuf:"varint,1,opt,name=state_id,json=stateId,proto3" json:"state_id,omitempty"`
	Added          []uint32 `protobuf:"varint,2,rep,packed,name=added,proto3" json:"added,omitempty"`
	RemovedIndices []uint32 `protobuf:"varint,3,rep,packed,name=removed_indices,json=removedIndices,proto3" json:"removed_indices,omitempty"`
	RemovedLeaves  [][]byte `protobuf:"bytes,4,rep,name=removed_leaves,json=removedLeaves,proto3" json:"removed_leaves,omitempty"`
	Updated        []uint32 `protobuf:"varint,5,rep,packed,name=updated,proto3" json:"updated,omitempty"`
}

func (x *HandlePendingCommitResponse) Reset() {
	*x = HandlePendingCommitResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mls_client_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HandlePendingCommitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HandlePendingCommitResponse) ProtoMessage() {}

func (x *HandlePendingCommitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mls_client_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HandlePendingCommitResponse.ProtoReflect.Descriptor instead.
func (*HandlePendingCommitResponse) Descriptor() ([]byte, []int) {
	return file_mls_client_proto_rawDescGZIP(), []int{40}
}

func (x *HandlePendingCommitResponse) GetStateId() uint32 {
	if x != nil {
		return x.StateId
	}
	return 0
}

func (x *HandlePendingCommitResponse) GetAdded() []uint32 {
	if x != nil {
		return x.Added
	}
	return nil
}

func (x *HandlePendingCommitResponse) GetRemovedIndices() []uint32 {
	if x != nil {
		return x.RemovedIndices
	}
	return nil
}

func (x *HandlePendingCommitResponse) GetRemovedLeaves() [][]byte {
	if x != nil {
		return x.RemovedLeaves
	}
	return nil
}

func (x *HandlePendingCommitResponse) GetUpdated() []uint32 {
	if x != nil {
		return x.Updated
	}
	return nil
}

// rpc HandleExternalCommit
type HandleExternalCommitRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StateId uint32 `protobuf:"varint,1,opt,name=state_id,json=stateId,proto3" json:"state_id,omitempty"`
	Commit  []byte `protobuf:"bytes,3,opt,name=commit,proto3" json:"commit,omitempty"`
}

func (x *HandleExternalCommitRequest) Reset() {
	*x = HandleExternalCommitRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mls_client_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HandleExternalCommitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HandleExternalCommitRequest) ProtoMessage() {}

func (x *HandleExternalCommitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mls_client_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HandleExternalCommitRequest.ProtoReflect.Descriptor instead.
func (*HandleExternalCommitRequest) Descriptor() ([]byte, []int) {
	return file_mls_client_proto_rawDescGZIP(), []int{41}
}

func (x *HandleExternalCommitRequest) GetStateId() uint32 {
	if x != nil {
		return x.StateId
	}
	return 0
}

func (x *HandleExternalCommitRequest) GetCommit() []byte {
	if x != nil {
		return x.Commit
	}
	return nil
}

type HandleExternalCommitResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StateId uint32 `protobuf:"varint,1,opt,name=state_id,json=stateId,proto3" json:"state_id,omitempty"`
}

func (x *HandleExternalCommitResponse) Reset() {
	*x = HandleExternalCommitResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mls_client_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HandleExternalCommitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HandleExternalCommitResponse) ProtoMessage() {}

func (x *HandleExternalCommitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mls_client_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HandleExternalCommitResponse.ProtoReflect.Descriptor instead.
func (*HandleExternalCommitResponse) Descriptor() ([]byte, []int) {
	return file_mls_client_proto_rawDescGZIP(), []int{42}
}

func (x *HandleExternalCommitResponse) GetStateId() uint32 {
	if x != nil {
		return x.StateId
	}
	return 0
}

var File_mls_client_proto protoreflect.FileDescriptor

var file_mls_client_proto_rawDesc = []byte{
	0x0a, 0x10, 0x6d, 0x6c, 0x73, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0a, 0x6d, 0x6c, 0x73, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x22, 0x0d,
	0x0a, 0x0b, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x22, 0x0a,
	0x0c, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x22, 0x1e, 0x0a, 0x1c, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x43, 0x69,
	0x70, 0x68, 0x65, 0x72, 0x73, 0x75, 0x69, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x43, 0x0a, 0x1d, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x43, 0x69,
	0x70, 0x68, 0x65, 0x72, 0x73, 0x75, 0x69, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x69, 0x70, 0x68, 0x65, 0x72, 0x73, 0x75, 0x69, 0x74,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0c, 0x63, 0x69, 0x70, 0x68, 0x65, 0x72,
	0x73, 0x75, 0x69, 0x74, 0x65, 0x73, 0x22, 0xdf, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x54, 0x65, 0x73, 0x74, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x44, 0x0a, 0x10, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x76, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a,
	0x2e, 0x6d, 0x6c, 0x73, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x65, 0x73, 0x74,
	0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0e, 0x74, 0x65, 0x73, 0x74,
	0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x69,
	0x70, 0x68, 0x65, 0x72, 0x5f, 0x73, 0x75, 0x69, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0b, 0x63, 0x69, 0x70, 0x68, 0x65, 0x72, 0x53, 0x75, 0x69, 0x74, 0x65, 0x12, 0x19, 0x0a,
	0x08, 0x6e, 0x5f, 0x6c, 0x65, 0x61, 0x76, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x07, 0x6e, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x6e, 0x5f, 0x67, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0c, 0x6e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x19, 0x0a,
	0x08, 0x6e, 0x5f, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x07, 0x6e, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x73, 0x22, 0x3d, 0x0a, 0x1a, 0x47, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x54, 0x65, 0x73, 0x74, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x76,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x74, 0x65, 0x73,
	0x74, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x22, 0x80, 0x01, 0x0a, 0x17, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x79, 0x54, 0x65, 0x73, 0x74, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x44, 0x0a, 0x10, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x76, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e,
	0x6d, 0x6c, 0x73, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x56,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0e, 0x74, 0x65, 0x73, 0x74, 0x56,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x65, 0x73,
	0x74, 0x5f, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a,
	0x74, 0x65, 0x73, 0x74, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x22, 0x1a, 0x0a, 0x18, 0x56, 0x65,
	0x72, 0x69, 0x66, 0x79, 0x54, 0x65, 0x73, 0x74, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x7f, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x69, 0x70, 0x68, 0x65,
	0x72, 0x5f, 0x73, 0x75, 0x69, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x63,
	0x69, 0x70, 0x68, 0x65, 0x72, 0x53, 0x75, 0x69, 0x74, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x65, 0x6e,
	0x63, 0x72, 0x79, 0x70, 0x74, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x73, 0x68, 0x61, 0x6b, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x48, 0x61,
	0x6e, 0x64, 0x73, 0x68, 0x61, 0x6b, 0x65, 0x22, 0x30, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19,
	0x0a, 0x08, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x07, 0x73, 0x74, 0x61, 0x74, 0x65, 0x49, 0x64, 0x22, 0x3c, 0x0a, 0x17, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x69, 0x70, 0x68, 0x65, 0x72, 0x5f, 0x73,
	0x75, 0x69, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x63, 0x69, 0x70, 0x68,
	0x65, 0x72, 0x53, 0x75, 0x69, 0x74, 0x65, 0x22, 0x62, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4b, 0x65, 0x79, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6b, 0x65,
	0x79, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x0a, 0x6b, 0x65, 0x79, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x22, 0x80, 0x01, 0x0a, 0x10,
	0x4a, 0x6f, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x25, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x77, 0x65, 0x6c, 0x63, 0x6f,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x77, 0x65, 0x6c, 0x63, 0x6f, 0x6d,
	0x65, 0x12, 0x2b, 0x0a, 0x11, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x5f, 0x68, 0x61, 0x6e,
	0x64, 0x73, 0x68, 0x61, 0x6b, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x65, 0x6e,
	0x63, 0x72, 0x79, 0x70, 0x74, 0x48, 0x61, 0x6e, 0x64, 0x73, 0x68, 0x61, 0x6b, 0x65, 0x22, 0x2e,
	0x0a, 0x11, 0x4a, 0x6f, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x73, 0x74, 0x61, 0x74, 0x65, 0x49, 0x64, 0x22, 0x70,
	0x0a, 0x13, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x10, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x5f, 0x68,
	0x61, 0x6e, 0x64, 0x73, 0x68, 0x61, 0x6b, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10,
	0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x48, 0x61, 0x6e, 0x64, 0x73, 0x68, 0x61, 0x6b, 0x65,
	0x22, 0x49, 0x0a, 0x14, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x4a, 0x6f, 0x69, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x22, 0x34, 0x0a, 0x17, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x73, 0x74, 0x61, 0x74, 0x65, 0x49,
	0x64, 0x22, 0x48, 0x0a, 0x18, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a,
	0x12, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x10, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0x2d, 0x0a, 0x10, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x19, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x07, 0x73, 0x74, 0x61, 0x74, 0x65, 0x49, 0x64, 0x22, 0x3f, 0x0a, 0x11, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2a, 0x0a, 0x11, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x73, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0f, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x41, 0x75, 0x74, 0x68, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x22, 0x79, 0x0a, 0x0d, 0x45,
	0x78, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6b, 0x65, 0x79, 0x5f, 0x6c,
	0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6b, 0x65, 0x79,
	0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x22, 0x39, 0x0a, 0x0e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x65, 0x78, 0x70, 0x6f,
	0x72, 0x74, 0x65, 0x64, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0e, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x53, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x22, 0x56, 0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x73, 0x74, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x29,
	0x0a, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x22, 0x31, 0x0a, 0x0f, 0x50, 0x72, 0x6f,
	0x74, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x63, 0x69, 0x70, 0x68, 0x65, 0x72, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0a, 0x63, 0x69, 0x70, 0x68, 0x65, 0x72, 0x74, 0x65, 0x78, 0x74, 0x22, 0x4d, 0x0a, 0x10,
	0x55, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x07, 0x73, 0x74, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63,
	0x69, 0x70, 0x68, 0x65, 0x72, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x0a, 0x63, 0x69, 0x70, 0x68, 0x65, 0x72, 0x74, 0x65, 0x78, 0x74, 0x22, 0x3e, 0x0a, 0x11, 0x55,
	0x6e, 0x70, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x29, 0x0a, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0f, 0x61, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x22, 0x55, 0x0a, 0x0f, 0x53,
	0x74, 0x6f, 0x72, 0x65, 0x50, 0x53, 0x4b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19,
	0x0a, 0x08, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x07, 0x73, 0x74, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x70, 0x73, 0x6b,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x70, 0x73, 0x6b, 0x49, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x70, 0x73, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x70,
	0x73, 0x6b, 0x22, 0x12, 0x0a, 0x10, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x50, 0x53, 0x4b, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x50, 0x0a, 0x12, 0x41, 0x64, 0x64, 0x50, 0x72, 0x6f,
	0x70, 0x6f, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6b, 0x65, 0x79, 0x5f, 0x70,
	0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x6b, 0x65,
	0x79, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x22, 0x2e, 0x0a, 0x10, 0x50, 0x72, 0x6f, 0x70,
	0x6f, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08,
	0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x22, 0x32, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x07, 0x73, 0x74, 0x61, 0x74, 0x65, 0x49, 0x64, 0x22, 0x60, 0x0a, 0x15,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x73, 0x74, 0x61, 0x74, 0x65, 0x49, 0x64,
	0x12, 0x2c, 0x0a, 0x12, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x5f, 0x6c, 0x65, 0x61, 0x66,
	0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x72, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x64, 0x4c, 0x65, 0x61, 0x66, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x46,
	0x0a, 0x12, 0x50, 0x53, 0x4b, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x73, 0x74, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12,
	0x15, 0x0a, 0x06, 0x70, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x05, 0x70, 0x73, 0x6b, 0x49, 0x64, 0x22, 0x70, 0x0a, 0x15, 0x52, 0x65, 0x49, 0x6e, 0x69, 0x74,
	0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x19, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x07, 0x73, 0x74, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x69, 0x70, 0x68, 0x65, 0x72, 0x5f,
	0x73, 0x75, 0x69, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x63, 0x69, 0x70,
	0x68, 0x65, 0x72, 0x53, 0x75, 0x69, 0x74, 0x65, 0x22, 0x32, 0x0a, 0x15, 0x41, 0x70, 0x70, 0x41,
	0x63, 0x6b, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x07, 0x73, 0x74, 0x61, 0x74, 0x65, 0x49, 0x64, 0x22, 0x68, 0x0a, 0x0d,
	0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a,
	0x08, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x07, 0x73, 0x74, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x79, 0x5f, 0x72,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x0b,
	0x62, 0x79, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x62,
	0x79, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x07, 0x62,
	0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x42, 0x0a, 0x0e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d,
	0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x77, 0x65, 0x6c, 0x63, 0x6f, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x07, 0x77, 0x65, 0x6c, 0x63, 0x6f, 0x6d, 0x65, 0x22, 0x64, 0x0a, 0x13, 0x48, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x07, 0x73, 0x74, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x08,
	0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d,
	0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74,
	0x22, 0xb1, 0x01, 0x0a, 0x14, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x69,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x64, 0x64, 0x65, 0x64, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x64, 0x64, 0x65, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x64, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x65, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0d, 0x52, 0x0e, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x49, 0x6e, 0x64, 0x69,
	0x63, 0x65, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x5f, 0x6c,
	0x65, 0x61, 0x76, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x0d, 0x72, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x64, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x07, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x22, 0x37, 0x0a, 0x1a, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x50, 0x65,
	0x6e, 0x64, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x73, 0x74, 0x61, 0x74, 0x65, 0x49, 0x64, 0x22, 0xb8, 0x01,
	0x0a, 0x1b, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x43,
	0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a,
	0x08, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x07, 0x73, 0x74, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x64, 0x64, 0x65,
	0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x64, 0x64, 0x65, 0x64, 0x12, 0x27,
	0x0a, 0x0f, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x65,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0e, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64,
	0x49, 0x6e, 0x64, 0x69, 0x63, 0x65, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x64, 0x5f, 0x6c, 0x65, 0x61, 0x76, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0c, 0x52,
	0x0d, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0d, 0x52,
	0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x22, 0x50, 0x0a, 0x1b, 0x48, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x22, 0x39, 0x0a, 0x1c, 0x48, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x43, 0x6f, 0x6d, 0x6d,
	0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x49, 0x64, 0x2a, 0x6c, 0x0a, 0x0e, 0x54, 0x65, 0x73, 0x74, 0x56, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0d, 0x0a, 0x09, 0x54, 0x52, 0x45, 0x45, 0x5f,
	0x4d, 0x41, 0x54, 0x48, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x45, 0x4e, 0x43, 0x52, 0x59, 0x50,
	0x54, 0x49, 0x4f, 0x4e, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x4b, 0x45, 0x59, 0x5f, 0x53, 0x43,
	0x48, 0x45, 0x44, 0x55, 0x4c, 0x45, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x54, 0x52, 0x41, 0x4e,
	0x53, 0x43, 0x52, 0x49, 0x50, 0x54, 0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07, 0x54, 0x52, 0x45, 0x45,
	0x4b, 0x45, 0x4d, 0x10, 0x04, 0x12, 0x0c, 0x0a, 0x08, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45,
	0x53, 0x10, 0x05, 0x32, 0x80, 0x10, 0x0a, 0x09, 0x4d, 0x4c, 0x53, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x12, 0x3b, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x2e, 0x6d, 0x6c, 0x73, 0x5f,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x18, 0x2e, 0x6d, 0x6c, 0x73, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6e,
	0x0a, 0x15, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x43, 0x69, 0x70, 0x68, 0x65,
	0x72, 0x73, 0x75, 0x69, 0x74, 0x65, 0x73, 0x12, 0x28, 0x2e, 0x6d, 0x6c, 0x73, 0x5f, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x43, 0x69,
	0x70, 0x68, 0x65, 0x72, 0x73, 0x75, 0x69, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x29, 0x2e, 0x6d, 0x6c, 0x73, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x53,
	0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x43, 0x69, 0x70, 0x68, 0x65, 0x72, 0x73, 0x75,
	0x69, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x65,
	0x0a, 0x12, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x54, 0x65, 0x73, 0x74, 0x56, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x12, 0x25, 0x2e, 0x6d, 0x6c, 0x73, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x54, 0x65, 0x73, 0x74, 0x56, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x6d, 0x6c,
	0x73, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x54, 0x65, 0x73, 0x74, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5f, 0x0a, 0x10, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x54,
	0x65, 0x73, 0x74, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x23, 0x2e, 0x6d, 0x6c, 0x73, 0x5f,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x54, 0x65, 0x73,
	0x74, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24,
	0x2e, 0x6d, 0x6c, 0x73, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x79, 0x54, 0x65, 0x73, 0x74, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1e, 0x2e, 0x6d, 0x6c, 0x73, 0x5f, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x6d, 0x6c, 0x73, 0x5f, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5f, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4b, 0x65, 0x79, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x12, 0x23, 0x2e, 0x6d,
	0x6c, 0x73, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4b, 0x65, 0x79, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x24, 0x2e, 0x6d, 0x6c, 0x73, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x09, 0x4a, 0x6f, 0x69,
	0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1c, 0x2e, 0x6d, 0x6c, 0x73, 0x5f, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x6d, 0x6c, 0x73, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x53, 0x0a, 0x0c, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x4a, 0x6f, 0x69, 0x6e, 0x12, 0x1f, 0x2e, 0x6d, 0x6c, 0x73, 0x5f, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x4a, 0x6f, 0x69, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x6d, 0x6c, 0x73, 0x5f, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x4a, 0x6f, 0x69, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5f, 0x0a, 0x10, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x23,
	0x2e, 0x6d, 0x6c, 0x73, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x6d, 0x6c, 0x73, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x09, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x12, 0x1c, 0x2e, 0x6d, 0x6c, 0x73, 0x5f, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x6d, 0x6c, 0x73, 0x5f, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x06, 0x45, 0x78, 0x70, 0x6f, 0x72,
	0x74, 0x12, 0x19, 0x2e, 0x6d, 0x6c, 0x73, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x45,
	0x78, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x6d,
	0x6c, 0x73, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x07, 0x50, 0x72,
	0x6f, 0x74, 0x65, 0x63, 0x74, 0x12, 0x1a, 0x2e, 0x6d, 0x6c, 0x73, 0x5f, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1b, 0x2e, 0x6d, 0x6c, 0x73, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x50,
	0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x4a, 0x0a, 0x09, 0x55, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x12, 0x1c, 0x2e,
	0x6d, 0x6c, 0x73, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x6e, 0x70, 0x72, 0x6f,
	0x74, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x6d, 0x6c,
	0x73, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x65,
	0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x08,
	0x53, 0x74, 0x6f, 0x72, 0x65, 0x50, 0x53, 0x4b, 0x12, 0x1b, 0x2e, 0x6d, 0x6c, 0x73, 0x5f, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x50, 0x53, 0x4b, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x6d, 0x6c, 0x73, 0x5f, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x50, 0x53, 0x4b, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x0b, 0x41, 0x64, 0x64, 0x50, 0x72, 0x6f, 0x70,
	0x6f, 0x73, 0x61, 0x6c, 0x12, 0x1e, 0x2e, 0x6d, 0x6c, 0x73, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x41, 0x64, 0x64, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x6d, 0x6c, 0x73, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x53, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72,
	0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x12, 0x21, 0x2e, 0x6d, 0x6c, 0x73, 0x5f, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73,
	0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x6d, 0x6c, 0x73, 0x5f,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x53, 0x0a, 0x0e, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x12, 0x21, 0x2e, 0x6d, 0x6c,
	0x73, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50,
	0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c,
	0x2e, 0x6d, 0x6c, 0x73, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x70,
	0x6f, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4d,
	0x0a, 0x0b, 0x50, 0x53, 0x4b, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x12, 0x1e, 0x2e,
	0x6d, 0x6c, 0x73, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x53, 0x4b, 0x50, 0x72,
	0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e,
	0x6d, 0x6c, 0x73, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x6f,
	0x73, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x53, 0x0a,
	0x0e, 0x52, 0x65, 0x49, 0x6e, 0x69, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x12,
	0x21, 0x2e, 0x6d, 0x6c, 0x73, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x49,
	0x6e, 0x69, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x6d, 0x6c, 0x73, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x53, 0x0a, 0x0e, 0x41, 0x70, 0x70, 0x41, 0x63, 0x6b, 0x50, 0x72, 0x6f, 0x70,
	0x6f, 0x73, 0x61, 0x6c, 0x12, 0x21, 0x2e, 0x6d, 0x6c, 0x73, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x41, 0x70, 0x70, 0x41, 0x63, 0x6b, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x6d, 0x6c, 0x73, 0x5f, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x06, 0x43, 0x6f, 0x6d, 0x6d, 0x69,
	0x74, 0x12, 0x19, 0x2e, 0x6d, 0x6c, 0x73, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x6d,
	0x6c, 0x73, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x53, 0x0a, 0x0c, 0x48, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x12, 0x1f, 0x2e, 0x6d, 0x6c, 0x73,
	0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x43, 0x6f,
	0x6d, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x6d, 0x6c,
	0x73, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x43,
	0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x68, 0x0a, 0x13, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x12, 0x26, 0x2e, 0x6d, 0x6c, 0x73, 0x5f, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27,
	0x2e, 0x6d, 0x6c, 0x73, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x48, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6b, 0x0a, 0x14, 0x48, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x43, 0x6f, 0x6d, 0x6d, 0x69,
	0x74, 0x12, 0x27, 0x2e, 0x6d, 0x6c, 0x73, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x48,
	0x61, 0x6e, 0x64, 0x6c, 0x65, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x43, 0x6f, 0x6d,
	0x6d, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x6d, 0x6c, 0x73,
	0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x45, 0x78,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x34, 0x5a, 0x32, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x6c, 0x73, 0x77, 0x67, 0x2f, 0x6d, 0x6c, 0x73, 0x2d, 0x69,
	0x6d, 0x70, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x6f, 0x70, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_mls_client_proto_rawDescOnce sync.Once
	file_mls_client_proto_rawDescData = file_mls_client_proto_rawDesc
)

func file_mls_client_proto_rawDescGZIP() []byte {
	file_mls_client_proto_rawDescOnce.Do(func() {
		file_mls_client_proto_rawDescData = protoimpl.X.CompressGZIP(file_mls_client_proto_rawDescData)
	})
	return file_mls_client_proto_rawDescData
}

var file_mls_client_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_mls_client_proto_msgTypes = make([]protoimpl.MessageInfo, 43)
var file_mls_client_proto_goTypes = []interface{}{
	(TestVectorType)(0),                   // 0: mls_client.TestVectorType
	(*NameRequest)(nil),                   // 1: mls_client.NameRequest
	(*NameResponse)(nil),                  // 2: mls_client.NameResponse
	(*SupportedCiphersuitesRequest)(nil),  // 3: mls_client.SupportedCiphersuitesRequest
	(*SupportedCiphersuitesResponse)(nil), // 4: mls_client.SupportedCiphersuitesResponse
	(*GenerateTestVectorRequest)(nil),     // 5: mls_client.GenerateTestVectorRequest
	(*GenerateTestVectorResponse)(nil),    // 6: mls_client.GenerateTestVectorResponse
	(*VerifyTestVectorRequest)(nil),       // 7: mls_client.VerifyTestVectorRequest
	(*VerifyTestVectorResponse)(nil),      // 8: mls_client.VerifyTestVectorResponse
	(*CreateGroupRequest)(nil),            // 9: mls_client.CreateGroupRequest
	(*CreateGroupResponse)(nil),           // 10: mls_client.CreateGroupResponse
	(*CreateKeyPackageRequest)(nil),       // 11: mls_client.CreateKeyPackageRequest
	(*CreateKeyPackageResponse)(nil),      // 12: mls_client.CreateKeyPackageResponse
	(*JoinGroupRequest)(nil),              // 13: mls_client.JoinGroupRequest
	(*JoinGroupResponse)(nil),             // 14: mls_client.JoinGroupResponse
	(*ExternalJoinRequest)(nil),           // 15: mls_client.ExternalJoinRequest
	(*ExternalJoinResponse)(nil),          // 16: mls_client.ExternalJoinResponse
	(*PublicGroupStateRequest)(nil),       // 17: mls_client.PublicGroupStateRequest
	(*PublicGroupStateResponse)(nil),      // 18: mls_client.PublicGroupStateResponse
	(*StateAuthRequest)(nil),              // 19: mls_client.StateAuthRequest
	(*StateAuthResponse)(nil),             // 20: mls_client.StateAuthResponse
	(*ExportRequest)(nil),                 // 21: mls_client.ExportRequest
	(*ExportResponse)(nil),                // 22: mls_client.ExportResponse
	(*ProtectRequest)(nil),                // 23: mls_client.ProtectRequest
	(*ProtectResponse)(nil),               // 24: mls_client.ProtectResponse
	(*UnprotectRequest)(nil),              // 25: mls_client.UnprotectRequest
	(*UnprotectResponse)(nil),             // 26: mls_client.UnprotectResponse
	(*StorePSKRequest)(nil),               // 27: mls_client.StorePSKRequest
	(*StorePSKResponse)(nil),              // 28: mls_client.StorePSKResponse
	(*AddProposalRequest)(nil),            // 29: mls_client.AddProposalRequest
	(*ProposalResponse)(nil),              // 30: mls_client.ProposalResponse
	(*UpdateProposalRequest)(nil),         // 31: mls_client.UpdateProposalRequest
	(*RemoveProposalRequest)(nil),         // 32: mls_client.RemoveProposalRequest
	(*PSKProposalRequest)(nil),            // 33: mls_client.PSKProposalRequest
	(*ReInitProposalRequest)(nil),         // 34: mls_client.ReInitProposalRequest
	(*AppAckProposalRequest)(nil),         // 35: mls_client.AppAckProposalRequest
	(*CommitRequest)(nil),                 // 36: mls_client.CommitRequest
	(*CommitResponse)(nil),                // 37: mls_client.CommitResponse
	(*HandleCommitRequest)(nil),           // 38: mls_client.HandleCommitRequest
	(*HandleCommitResponse)(nil),          // 39: mls_client.HandleCommitResponse
	(*HandlePendingCommitRequest)(nil),    // 40: mls_client.HandlePendingCommitRequest
	(*HandlePendingCommitResponse)(nil),   // 41: mls_client.HandlePendingCommitResponse
	(*HandleExternalCommitRequest)(nil),   // 42: mls_client.HandleExternalCommitRequest
	(*HandleExternalCommitResponse)(nil),  // 43: mls_client.HandleExternalCommitResponse
}
var file_mls_client_proto_depIdxs = []int32{
	0,  // 0: mls_client.GenerateTestVectorRequest.test_vector_type:type_name -> mls_client.TestVectorType
	0,  // 1: mls_client.VerifyTestVectorRequest.test_vector_type:type_name -> mls_client.TestVectorType
	1,  // 2: mls_client.MLSClient.Name:input_type -> mls_client.NameRequest
	3,  // 3: mls_client.MLSClient.SupportedCiphersuites:input_type -> mls_client.SupportedCiphersuitesRequest
	5,  // 4: mls_client.MLSClient.GenerateTestVector:input_type -> mls_client.GenerateTestVectorRequest
	7,  // 5: mls_client.MLSClient.VerifyTestVector:input_type -> mls_client.VerifyTestVectorRequest
	9,  // 6: mls_client.MLSClient.CreateGroup:input_type -> mls_client.CreateGroupRequest
	11, // 7: mls_client.MLSClient.CreateKeyPackage:input_type -> mls_client.CreateKeyPackageRequest
	13, // 8: mls_client.MLSClient.JoinGroup:input_type -> mls_client.JoinGroupRequest
	15, // 9: mls_client.MLSClient.ExternalJoin:input_type -> mls_client.ExternalJoinRequest
	17, // 10: mls_client.MLSClient.PublicGroupState:input_type -> mls_client.PublicGroupStateRequest
	19, // 11: mls_client.MLSClient.StateAuth:input_type -> mls_client.StateAuthRequest
	21, // 12: mls_client.MLSClient.Export:input_type -> mls_client.ExportRequest
	23, // 13: mls_client.MLSClient.Protect:input_type -> mls_client.ProtectRequest
	25, // 14: mls_client.MLSClient.Unprotect:input_type -> mls_client.UnprotectRequest
	27, // 15: mls_client.MLSClient.StorePSK:input_type -> mls_client.StorePSKRequest
	29, // 16: mls_client.MLSClient.AddProposal:input_type -> mls_client.AddProposalRequest
	31, // 17: mls_client.MLSClient.UpdateProposal:input_type -> mls_client.UpdateProposalRequest
	32, // 18: mls_client.MLSClient.RemoveProposal:input_type -> mls_client.RemoveProposalRequest
	33, // 19: mls_client.MLSClient.PSKProposal:input_type -> mls_client.PSKProposalRequest
	34, // 20: mls_client.MLSClient.ReInitProposal:input_type -> mls_client.ReInitProposalRequest
	35, // 21: mls_client.MLSClient.AppAckProposal:input_type -> mls_client.AppAckProposalRequest
	36, // 22: mls_client.MLSClient.Commit:input_type -> mls_client.CommitRequest
	38, // 23: mls_client.MLSClient.HandleCommit:input_type -> mls_client.HandleCommitRequest
	40, // 24: mls_client.MLSClient.HandlePendingCommit:input_type -> mls_client.HandlePendingCommitRequest
	42, // 25: mls_client.MLSClient.HandleExternalCommit:input_type -> mls_client.HandleExternalCommitRequest
	2,  // 26: mls_client.MLSClient.Name:output_type -> mls_client.NameResponse
	4,  // 27: mls_client.MLSClient.SupportedCiphersuites:output_type -> mls_client.SupportedCiphersuitesResponse
	6,  // 28: mls_client.MLSClient.GenerateTestVector:output_type -> mls_client.GenerateTestVectorResponse
	8,  // 29: mls_client.MLSClient.VerifyTestVector:output_type -> mls_client.VerifyTestVectorResponse
	10, // 30: mls_client.MLSClient.CreateGroup:output_type -> mls_client.CreateGroupResponse
	12, // 31: mls_client.MLSClient.CreateKeyPackage:output_type -> mls_client.CreateKeyPackageResponse
	14, // 32: mls_client.MLSClient.JoinGroup:output_type -> mls_client.JoinGroupResponse
	16, // 33: mls_client.MLSClient.ExternalJoin:output_type -> mls_client.ExternalJoinResponse
	18, // 34: mls_client.MLSClient.PublicGroupState:output_type -> mls_client.PublicGroupStateResponse
	20, // 35: mls_client.MLSClient.StateAuth:output_type -> mls_client.StateAuthResponse
	22, // 36: mls_client.MLSClient.Export:output_type -> mls_client.ExportResponse
	24, // 37: mls_client.MLSClient.Protect:output_type -> mls_client.ProtectResponse
	26, // 38: mls_client.MLSClient.Unprotect:output_type -> mls_client.UnprotectResponse
	28, // 39: mls_client.MLSClient.StorePSK:output_type -> mls_client.StorePSKResponse
	30, // 40: mls_client.MLSClient.AddProposal:output_type -> mls_client.ProposalResponse
	30, // 41: mls_client.MLSClient.UpdateProposal:output_type -> mls_client.ProposalResponse
	30, // 42: mls_client.MLSClient.RemoveProposal:output_type -> mls_client.ProposalResponse
	30, // 43: mls_client.MLSClient.PSKProposal:output_type -> mls_client.ProposalResponse
	30, // 44: mls_client.MLSClient.ReInitProposal:output_type -> mls_client.ProposalResponse
	30, // 45: mls_client.MLSClient.AppAckProposal:output_type -> mls_client.ProposalResponse
	37, // 46: mls_client.MLSClient.Commit:output_type -> mls_client.CommitResponse
	39, // 47: mls_client.MLSClient.HandleCommit:output_type -> mls_client.HandleCommitResponse
	41, // 48: mls_client.MLSClient.HandlePendingCommit:output_type -> mls_client.HandlePendingCommitResponse
	43, // 49: mls_client.MLSClient.HandleExternalCommit:output_type -> mls_client.HandleExternalCommitResponse
	26, // [26:50] is the sub-list for method output_type
	2,  // [2:26] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_mls_client_proto_init() }
func file_mls_client_proto_init() {
	if File_mls_client_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_mls_client_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mls_client_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mls_client_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SupportedCiphersuitesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mls_client_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SupportedCiphersuitesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mls_client_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateTestVectorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mls_client_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateTestVectorResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mls_client_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifyTestVectorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mls_client_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifyTestVectorResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mls_client_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mls_client_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGroupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mls_client_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateKeyPackageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mls_client_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateKeyPackageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mls_client_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mls_client_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinGroupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mls_client_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExternalJoinRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mls_client_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExternalJoinResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mls_client_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublicGroupStateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mls_client_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublicGroupStateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mls_client_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateAuthRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mls_client_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateAuthResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mls_client_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExportRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mls_client_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExportResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mls_client_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mls_client_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mls_client_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnprotectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mls_client_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnprotectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mls_client_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StorePSKRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mls_client_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StorePSKResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mls_client_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddProposalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mls_client_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProposalResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mls_client_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateProposalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mls_client_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveProposalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mls_client_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PSKProposalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mls_client_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReInitProposalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mls_client_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppAckProposalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mls_client_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommitRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mls_client_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommitResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mls_client_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HandleCommitRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mls_client_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HandleCommitResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mls_client_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HandlePendingCommitRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mls_client_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HandlePendingCommitResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mls_client_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HandleExternalCommitRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mls_client_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HandleExternalCommitResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_mls_client_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   43,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_mls_client_proto_goTypes,
		DependencyIndexes: file_mls_client_proto_depIdxs,
		EnumInfos:         file_mls_client_proto_enumTypes,
		MessageInfos:      file_mls_client_proto_msgTypes,
	}.Build()
	File_mls_client_proto = out.File
	file_mls_client_proto_rawDesc = nil
	file_mls_client_proto_goTypes = nil
	file_mls_client_proto_depIdxs = nil
}
