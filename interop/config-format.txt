# Scripts

The file specifies a number of `scripts`. Each script describes a particular scenario describing the life of a group. In particular, each script specifies a sequence of **actions** (e.g. sending a proposal) performed by **actors** (e.g. alice). At each point in time, each actor has at most one MLS client who participates in at most one MLS session. A client and a session for an actor are created in one of two ways:

1. When the actor executes the createGroup action, a client with a session is created.
2. When the actor executes the createKeyPackage action, a client without a session is created. When later the actor executes the joinGroup action, a session for the client is created.

An action may result in packets sent to the delivery service or values outputted to the user. They are stored in the `transcript`, which is also printed to STDOUT.

Note: Creating a new client / session silently overwrites the first one.


# Actions

Each action specifies two mandatory values: a string `action` set to the action type (e.g. `addProposal`) and a string `actor` set to the name of the actor performing the action. In addition, some actions specify additional values pointing to outputs of previous actions stored in . For example, the action `addProposal` specifies the index of the action that created the key package of the added client. Such indices are always in the sequence of all actions in the given script.

The following actions are supported.


`action`             | Values in addition to `actor` and `action` | Values stored in `transcript` | Description
------------------------------------------------------------------------------------------------------------------------------------------------------
`createGroup`        | -                                          | -                             | A new client for the `actor` and a new group
                     |                                            |                               | with themselves in it are created.
------------------------------------------------------------------------------------------------------------------------------------------------------
`createKeyPackage`   | -                                          | key package                   | A new client for the `actor` and a new key
                     |                                            |                               | package for them are created.
------------------------------------------------------------------------------------------------------------------------------------------------------
`addProposal`        | `keyPackage`: int                          | proposal packet               | The `actor`’s current client sends a proposal
                     |                                            |                               | that adds a member with the key package
                     |                                            |                               | created during the `createKeyPackage` action with
                     |                                            |                               | index `keyPackage`.
------------------------------------------------------------------------------------------------------------------------------------------------------
`removeProposal`     | `removedLeafIndex`: int                    | proposal packet               | The `actor`’s current client sends a proposal
                     |                                            |                               | that removes a member with leaf index
                     |                                            |                               | `removedLeafIndex`.
------------------------------------------------------------------------------------------------------------------------------------------------------
`commit`             | `byReference`: []int                       | commit packet                 | The `actor`’s current client first processes
                     |                                            | welcome packet                | the proposals created during actions identified
                     |                                            |                               | by the indices in the list `byReference` and
                     |                                            |                               | then they send a commit.
                     |                                            |                               | The `byReference` list MUST NOT include
                     |                                            |                               | proposals from `actor`.
------------------------------------------------------------------------------------------------------------------------------------------------------
`handlePendingCommit`| -                                          | state update                  | The `actor`’s current client accepts the
                     |                                            |                               | commit it sent.
------------------------------------------------------------------------------------------------------------------------------------------------------
`handleCommit`       | `commit`:      int                         | state update                  | The `actor`’s current client first processes
                     | `byReference`: []int                       |                               | the proposals created during actions with
                     |                                            |                               | indices specified in `byReference`. Then it
                     |                                            |                               | processes the commit created during the `commit`
                     |                                            |                               | action with index `commit` which includes them by
                     |                                            |                               | reference.
                     |                                            |                               | The `byReference` list MUST NOT include
                     |                                            |                               | proposals created by `actor`. The `commit`
                     |                                            |                               | MUST NOT have been created by `actor`.
------------------------------------------------------------------------------------------------------------------------------------------------------
`joinGroup`.         | `welcome`:      int                        | [TODO]                        | The `actor`’s current joins the group using the
                     | `byReference`: []int                       |                               | welcome message created during the `commit` action 
                     |                                            |                               | index `welcome`. This creates a new session.









